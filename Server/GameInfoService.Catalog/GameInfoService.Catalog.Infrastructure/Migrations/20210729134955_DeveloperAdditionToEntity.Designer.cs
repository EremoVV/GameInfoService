// <auto-generated />
using System;
using GameInfoService.Catalog.Infrastructure.Repositories.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameInfoService.Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(GameInfoContext))]
    [Migration("20210729134955_DeveloperAdditionToEntity")]
    partial class DeveloperAdditionToEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameInfoService.Catalog.Domain.Models.Entities.GameDeveloperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameDeveloperSet");
                });

            modelBuilder.Entity("GameInfoService.Catalog.Domain.Models.Entities.GameInfoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("GameInfoSet");
                });

            modelBuilder.Entity("GameInfoService.Catalog.Domain.Models.Entities.GameInfoEntity", b =>
                {
                    b.HasOne("GameInfoService.Catalog.Domain.Models.Entities.GameDeveloperEntity", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId");

                    b.Navigation("Developer");
                });
#pragma warning restore 612, 618
        }
    }
}
